модуль файлы
осторожно

импорт "стд::строки"
//импорт "стд::вывод"

тип Строки = []Строка

конст слеш = "/"

// Выдает разделитель имен в пути
фн разделитель*(): Строка {
    вернуть слеш
}

// Возращает путь к рабочей папке
фн путь к рабочей папке*(): Строка {
    вернуть "."
}

// Возращает путь к папке программы (папке с исполняемым файлом)
фн путь к папке программы*(): Строка {
    вернуть sysapi_exec_path()
}

// Собрать путь из частей
фн собрать путь*(имена: ...Строка): Строка {
    вернуть строки.соединить(слеш, имена...)
}

фн tri_substring(с: Строка8, первый-байт: Цел64, число-байтов: Цел64): Строка @внеш

// Из пути извлекает путь до последнего разделителя
// "./папка/файл" => "./папка"
фн извлечь путь к папке*(путь: Строка): Строка {

    надо длина(путь) > 0 иначе вернуть "."

    пусть с8 = путь(:осторожно Строка8)
    пусть № := длина(с8) - 1
    
    пока № >= 0 {
        надо с8[№] # '/'(:Байт) иначе прервать
        №--
    }
    
    если № < 0 {
        если путь = ".." { вернуть ".." }
        вернуть "."
    } иначе если № = 0 {
        вернуть слеш
    } 
    
    вернуть tri_substring(с8, 0, №)
}