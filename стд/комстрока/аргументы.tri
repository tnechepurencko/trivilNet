модуль комстрока
осторожно

импорт "стд::вывод"
//импорт "стд::строки"

//===

фн tri_argc(): Цел64 @внеш
фн tri_arg(n: Цел64): Строка @внеш

//===

тип Строки = []Строка

пусть аргументы = Строки[]

фн количество*():  Цел64 {
    вернуть длина(аргументы)
}

фн аргумент*(№: Цел64):  Строка {
    надо № >= 0 & № < длина(аргументы) иначе вернуть ""
    вернуть аргументы[№]
}

фн разобрать*() {

    пусть № := 1
    пусть кол-во = tri_argc()
    пока № < кол-во {

        пусть а = tri_arg(№)
        пусть б = а(:осторожно Строка8)
        
        если длина(б) > 0 & б[0](:Символ) = '-' {
            
            надо разобрать аргумент(а) иначе {
                вывод.ф("Неверный или не определенный параметр: %v\n", а)
                подсказка()
                вернуть
            }
        
        } иначе {
            аргументы.добавить(а)
        }
        
        //вывод.ф("%v\n", а)

        №++
    }
}

//=== временно, пока нет другой библиотеки
фн завершить программу*(условие: Цел64) @внеш("имя": "tri_exit")

