// Настройка:
//  тип Ключ = <тип>
//  тип Значение = <тип>
//  фн хеш(к: Ключ): Цел64 {}
//  конст размер = 1021
модуль словарь
осторожно

тип Элемент = класс {
    ключ: Ключ = позже
    значение: Значение  := позже
}

тип Элементы = []мб Элемент

тип Словарь* = класс {
    элементы = Элементы[длина: размер, *: пусто] 
    кол-во: Цел64 := 0
}

фн (с: Словарь) размер*(): Цел64 {
    вернуть с.кол-во
}

фн (с: Словарь) добавить*(к: Ключ, з: Значение) {

    надо с.кол-во < длина(с.элементы) * 2 / 3 
    иначе авария("слишком много элементов в таблице")

    пусть № := хеш(к) % длина(с.элементы)
    пока с.элементы[№] # пусто {
        пусть э = с.элементы[№]^
        если э.ключ = к {
            э.значение := з
            вернуть
        }

        № := (№ + 1) % длина(с.элементы)
    }

    с.элементы[№] := Элемент{ключ: к, значение: з}
    с.кол-во++
}


тип Ключ = Строка
тип Значение = Строка

фн хеш(к: Строка): Цел64 {
    пусть с8 = к(:осторожно Строка8)
    пусть № := 0
    пусть рез := 0
    пока № < длина(с8) {
        рез := (рез * 127 + с8[№](:Цел64)) % размер 
        №++
    }
    вернуть рез
}

конст размер = 1021
