модуль парсер

импорт "стд::вывод"
импорт "трик/асд"
импорт "трик/лексер"
импорт "трик/основа"


фн (п: Парсер) указание-типа(): асд.Тип {

	пусть мб-тип := ложь
    пусть мб-поз = п.поз

	если п.лек = лексер.МБ {
        мб-тип := истина
		п.взять()
	}

    пусть поз-типа = п.поз

	пусть имя-типа := п.идент()
    пусть имя-модуля := ""

	если п.лек = лексер.ТОЧКА {
		п.взять()
        имя-модуля := имя-типа
		имя-типа := п.идент()
	}

    пусть Т = асд.УказТипа{
        поз: поз-типа,
        имя-типа: имя-типа,
        имя-модуля: имя-модуля,
    }
    
    если мб-тип {
        вернуть асд.ТипМБ{
            поз: мб-поз,
            Т: Т,
        }
    }

	вернуть Т
}

фн (п: Парсер) описание-типа(): асд.ОписаниеТипа {

	п.взять()
    
    пусть поз = п.поз
	пусть имя = п.идент()
    пусть экспорт = п.экспорт()

	п.нужна лексема(лексер.РАВНО)
    
    пусть оп = асд.ОписаниеТипа{
        поз: поз,
        имя: имя,
        Т: п.определение-типа(),
    }
    
	вернуть оп
}

фн (п: Парсер) определение-типа(): асд.Тип {

	выбор п.лек {
//	когда лексер.LBRACK:
//		вернуть п.parseVectorType()
//	когда лексер.CLASS:
//		вернуть п.parseClassType()
	другое
		вернуть п.указание-типа()
	}
}

/*
фн (п: Парсер) parseVectorType() *асд.VectorType {

	пусть t = &асд.VectorType{
		TypeBase: асд.ТипBase{Pos: п.ле.поз},
	}

	п.взять()
	п.нужна лексема(лексер.RBRACK)

	t.ElementTyp = п.parseTypeRef()

	вернуть t
}

//== класс

фн (п: Парсер) parseClassType() *асд.ClassType {

	пусть t = &асд.ClassType{
		TypeBase: асд.ТипBase{Pos: п.ле.поз},
		Members:  make(map[Строка]асд.Описание),
	}

	п.взять()

	если п.лек = лексер.LPAR {
		п.взять()
		t.BaseTyp = п.parseTypeRef()
		п.нужна лексема(лексер.RPAR)
	}

	п.нужна лексема(лексер.LBRACE)

	пока п.лек # лексер.RBRACE & п.лек # лексер.КОН-ФАЙЛ {

		пусть f = п.parseField()
		t.Fields = append(t.Fields, f)

		если п.лек = лексер.RBRACE {
			прервать
		}
		п.разделитель()
	}

	п.нужна лексема(лексер.RBRACE)

	вернуть t
}

фн (п: Парсер) parseField() *асд.Field {

	пусть n = &асд.Field{
		DeclBase: асд.ОписаниеBase{
			Pos:  п.ле.поз,
			Host: п.мод,
		},
	}

	n.Name = п.идент()
	если п.parseExportMark() {
		n.Exported = истина
	}

	если п.лек = лексер.COLON {
		п.взять()
		n.Typ = п.parseTypeRef()
	}

	если п.лек = лексер.EQ {
		n.AssignOnce = истина
		п.взять()
	} иначе если п.лек = лексер.ASSIGN {
		п.взять()
	} иначе {
		env.AddError(п.ле.поз, "ПАР-ПЕРЕМ-ИНИТ")
		вернуть n
	}

	если п.лек = лексер.LATER {
		n.Later = истина
		п.взять()
	} иначе {
		n.Init = п.parseExpression()
	}

	вернуть n
}
*/