модуль контроль

импорт "стд::вывод"
//импорт "стд::строки"

импорт "трик/асд"
импорт "трик/основа"


фн (кон: Контроль) это константное выражение(выр: асд.Выражение): Лог {
	выбор пусть тек: тип выр {
	когда асд.Литерал:
		вернуть истина
	когда асд.Преобразовать:
		вернуть тек.сделано
	когда асд.ОперандИдент:
		вернуть кон.это константа(тек.объект^)
	когда асд.Доступ:
		вернуть тек.Л = пусто & кон.это константа(тек.объект^)
	}
	вернуть ложь
}

фн (кон: Контроль) это константа(объект: асд.Узел): Лог {
	выбор тип объект {
	когда асд.ОписаниеКонстанты, асд.Функция:
		вернуть истина
	другое
		вернуть ложь
	}
}

фн (кон: Контроль) проверить константное выражение(выр: асд.Выражение) {
	если кон.это константное выражение(выр) {
		вернуть
	}

	основа.добавить ошибку(выр.поз, "СЕМ-ОШ-КОНСТ-ВЫРАЖЕНИЕ")
}

/*
фн (кон: Контроль) calculateIntConstExpr(expr асд.Выражение) Цел64 {
	выбор x := expr.(type) {
	когда асд.Литерал:
		если x.Kind = асд.Лит-Цел {
			вернуть x.IntVal
		} иначе если x.Kind = асд.Лит-Слово {
			вернуть Цел64(x.WordVal)
		}
		panic("wrong literal kind")
	когда асд.ОперандИдент:
		c := x.Obj.(асд.ОписаниеКонстанты)

		вернуть кон.calculateIntConstExpr(c.Value)
	}
	panic("wrong конст expression")
}
*/