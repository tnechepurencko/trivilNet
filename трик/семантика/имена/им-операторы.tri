модуль имена

импорт "стд::вывод"
импорт "стд::строки"

импорт "трик/асд"
импорт "трик/основа"
импорт "трик/семантика/словарь-описаний"

//==== операторы

фн (им: Имена) операторы(тело: асд.СписокОператоров) {

    цикл оп среди тело.операторы {
		им.оператор(тело, оп)
	}

    если тело.область # пусто & им.область = тело.область^ {
		им.область := тело.область^.выше^
	}
}

фн (им: Имена) оператор(блок: мб асд.СписокОператоров, оп: асд.Оператор) {

	выбор пусть тек: тип оп {
	когда асд.СписокОператоров:
		им.операторы(тек)
	когда асд.ОператорВыражение:
		им.выражение(тек.выражение)
	когда асд.ОператорОписание:
		им.локальное описание(блок^, тек.описание)
	когда асд.ОператорПрисвоить:
		им.выражение(тек.Л)
		им.выражение(тек.П)
	когда асд.ОператорУвеличить:
		им.выражение(тек.Л)
	когда асд.ОператорУменьшить:
		им.выражение(тек.Л)
	когда асд.ОператорЕсли:
		им.выражение(тек.условие)
		им.операторы(тек.если-да)
		если тек.если-нет # пусто {
			им.оператор(пусто, тек.если-нет^)
		}
	когда асд.ОператорПока:
		им.выражение(тек.условие)
		им.операторы(тек.тело)
	когда асд.ОператорЦикл:
		им.выражение(тек.В)
		если тек.индекс # пусто {
            пусть пер = тек.индекс^
			пер.задать-позже := истина
			им.локальное описание(тек.тело, пер)
		}
		если тек.элемент # пусто {
            пусть пер = тек.элемент^
			пер.задать-позже := истина
			им.локальное описание(тек.тело, пер)
		}
		им.операторы(тек.тело)
	когда асд.ОператорНадо:
		им.выражение(тек.условие)
		им.оператор(пусто, тек.если-нет)
	когда асд.ОператорВыбор:
		им.оператор выбора(тек)
	когда асд.ОператорВыборПоТипу:
		им.оператор выбора по типу(тек)
	когда асд.ОператорВернуть:
		если тек.В # пусто {
			им.выражение(тек.В^)
		}
	когда асд.ОператорПрервать:
		//nothing
	когда асд.ОператорАвария:
		им.выражение(тек.В)

	другое
        авария(строки.ф("неизвестный оператор 2: $тип;", оп)) 
	}
}

фн (им: Имена) локальное описание(блок: асд.СписокОператоров, оп: асд.Описание) {
	если блок.область = пусто {
        пусть область = асд.новая область(им.область)
        блок.область := область
        им.область := область        
	}
	выбор пусть тек: тип оп {
	когда асд.ОписаниеПеременной:
		им.описание переменной(тек)
		добавить в область(тек.имя, тек, им.область)
	другое
		авария(строки.ф("локальное описание $тип;", оп))
	}
	//ast.ShowScopes("", им.scope)
}

фн (им: Имена) оператор выбора(тек: асд.ОператорВыбор) {
	если тек.В # пусто {
		им.выражение(тек.В^)
	}

    цикл вариант среди тек.варианты {
        цикл выр среди вариант.выражения {
			им.выражение(выр)
		}
		им.операторы(вариант.тело)
	}
	если тек.если-нет # пусто {
		им.операторы(тек.если-нет^)
	}
}

фн (им: Имена) оператор выбора по типу(тек: асд.ОператорВыборПоТипу) {
	им.выражение(тек.В)

    цикл вариант среди тек.варианты {
        цикл т среди вариант.типы {
			им.указание-типа(т)
		}
		если вариант.переменная # пусто {
			вариант.переменная^.задать-позже := истина
			им.локальное описание(вариант.тело, вариант.переменная^)
		}

		им.операторы(вариант.тело)
	}
	если тек.если-нет # пусто {
		им.операторы(тек.если-нет^)
	}
}
