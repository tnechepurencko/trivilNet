модуль имена

импорт "стд::вывод"
импорт "стд::строки"

импорт "трик/асд"
импорт "трик/основа"

фн добавить в область(имя: Строка, оп: асд.Описание, область: асд.Область) {
	
    пусть эл = область.имена.найти(имя)
	если эл # пусто {
        пусть уже = эл^.значение 
        если ~ (уже типа асд.ОшОписание) {
			основа.добавить ошибку(уже.поз, "СЕМ-УЖЕ-ОПИСАНО", имя)
		}
		вернуть
	}
    область.имена.добавить(имя, оп)
}

фн найти в области(область: асд.Область, имя: Строка): мб асд.Описание {

	пусть тек: мб асд.Область := область

	пока истина {
		если тек = пусто {
			вернуть пусто
		}

        пусть эл = тек^.имена.найти(имя)
		если эл # пусто {
			вернуть эл^.значение
		}

		тек := тек^.выше
	}
    вернуть пусто
}

// Всегда возвращает описание, возможно ОшОписание
фн найти описание(область: асд.Область, имя: Строка, поз: Цел64): асд.Описание {

	пусть оп = найти в области(область, имя)
	если оп # пусто {
		вернуть оп^
	}

	основа.добавить ошибку(поз, "СЕМ-НЕ-НАЙДЕНО", имя)
	пусть ош  = асд.ОшОписание{
        поз: поз,
        имя: имя,
	}
	добавить в область(имя, ош, область)
	вернуть ош
}

//== проверить импорт

фн имя для проверки импорта (мод: асд.Модуль, №: Цел64): Строка {
	вернуть строки.ф("$;$;", №, мод.имя) 
}

// Проверяет, что использованный модуль импортирован в исходном файле
фн (им: Имена) проверить что импортирован(мод: асд.Модуль, поз: Цел64) {

    пусть № = основа.номер исходника(поз)

    пусть эл = им.мод.область.имена.найти(имя для проверки импорта(мод, №))
	если эл = пусто {
        пусть исх = основа.исходник по позиции(поз)
		основа.добавить ошибку(поз, "СЕМ-МОДУЛЬ-НЕ-ИМПОРТИРОВАН", мод.имя, исх.имя-файла)
		// не повторять ошибку
        им.мод.область.имена.добавить(имя для проверки импорта(мод, №), мод)
	}
}