// Работа со служебными папками
модуль основа

//импорт "стд::вывод"
импорт "стд::строки"
импорт "стд::файлы"
импорт "стд::контейнеры/словарь/стр-стр"

конст (
	разделитель-хранилища = "::"
	имя-стандартного  = "стд"
    имя-папки-настроек = "./config"
)

пусть корни = стр-стр.Словарь{} // [Строка]Строка

фн собрать путь настройки*(имя-файла: Строка): Строка {
    вернуть файлы.собрать путь(имя-папки-настроек, имя-файла)
}

// Выдает или нормализованный путь или сообщение об ошибке
фн нормализовать путь*(путь: Строка, нормализованный-путь := Строка, ошибка := мб Строка) {

    нормализованный-путь := ""
    ошибка := пусто
    
    пусть части = строки.разделить(путь, разделитель-хранилища)
    если длина(части) = 2 & длина(части[1]) # 0 {
        пусть эл = корни.найти(части[0])
        если эл = пусто {
            ошибка := строки.ф("путь для кодовой базы '$;' не задан", части[0])
            вернуть
        }
        нормализованный-путь := файлы.собрать путь(эл^.значение, части[1])
        вернуть
    }
    
    пусть ф = файлы.новый файл(путь)

    нормализованный-путь := ф.абсолютный путь()
    если ф.ошибка?() # пусто {
        нормализованный-путь := ""
        ошибка := ф.ошибка?()^.сообщение()
    }
}

фн подготовить хранилища() {

    пусть стд-путь = файлы.собрать путь(файлы.путь к папке программы(), имя-стандартного)

    пусть ф = файлы.новый файл(стд-путь)
    если ф.это папка?() {
        корни.добавить(имя-стандартного, стд-путь)
    }    

	// TODO: прочитать файл со списком кодовых баз
}
