модуль компилятор

импорт "стд::вывод"
импорт "стд::строки"
импорт "стд::файлы"

импорт "трик/асд"
импорт "трик/основа"

// TODO: сделать конфигурационный файл? (для всего компилятора)

конст (
	имя-папки-тестов   = "_тест_"
	импорт-тестового-входа     = "стд::тестирование/тест-вход"
	образец-импорт = "№путь-тестируемого№"
	образец-имя-модуля = "№имя-тестируемого№"
)

фн тестировать-модуль*(исходный-путь: Строка) {
    
    вывод.ф("тестировать $;\n", исходный-путь)
    
    пусть нормализованный-путь := ""
    пусть ошибка: мб Строка := пусто

    основа.нормализовать путь(исходный-путь, нормализованный-путь,  ошибка)
	если ошибка # пусто {
		основа.добавить общую ошибку("ОКР-ОШ-ПУТЬ", исходный-путь, ошибка^)
		вернуть
	}    
    
	пусть сб = Сборка{
		путь-тестируемого: исходный-путь,
	}

	// Подготовка головного модуля тестирования
	пусть список = подготовить исходники запуска тестов(исходный-путь, нормализованный-путь)
	надо основа.число ошибок() = 0 иначе вернуть

    сб.главный := сб.разобратьМодуль(истина, список)

	надо основа.число ошибок() = 0 иначе вернуть

	сб.обработать()
}

//== добавление тестов ==

фн подготовить исходники тестов(путь-импорта: Строка, нормализованный-путь: Строка): Исходники {

	пусть список = исходники тестов(
        файлы.собрать путь(путь-импорта, имя-папки-тестов), 
        файлы.собрать путь(нормализованный-путь, имя-папки-тестов))
	
    если длина(список) = 0 {
		основа.добавить общую ошибку("ОКР-ОШ-НЕТ-ТЕСТОВ", файлы.собрать путь(нормализованный-путь, имя-папки-тестов))
	}

	вернуть список
}

фн исходники тестов(исходный-путь: Строка, нормализованный-путь: Строка): Исходники {

    пусть ф = файлы.новый файл(нормализованный-путь)
    надо ф.это папка?() иначе вернуть Исходники[]

	пусть список = основа.подготовить исходники в папке(исходный-путь, нормализованный-путь)

	надо длина(список) > 0 & список[0].ошибка = пусто иначе	вернуть Исходники[]

	вернуть список
}

// == тест вход

// Получает путь к тестируемому модулю
фн подготовить исходники запуска тестов(исходный-путь: Строка, нормализованный-путь: Строка): Исходники {

	пусть список = исходники запуска тестов()
	если длина(список) = 0 {
		авария("нет входа в тестирование")
		вернуть список
	}

	если длина(список) # 1 {
		авария("тест-вход - должен быть один исходный файл")
	}

    пусть исх = список[0]
	пусть текст := исх.байты(:Строка)

	текст := строки.заменить все(текст, образец-импорт, исходный-путь)
	текст := строки.заменить все(текст, образец-имя-модуля, файлы.извлечь последнее имя(нормализованный-путь))

    исх.байты := текст(:Байты)

	вернуть список
}

фн исходники запуска тестов(): Исходники {

    пусть нормализованный-путь := ""
    пусть ошибка: мб Строка := пусто

    основа.нормализовать путь(импорт-тестового-входа, нормализованный-путь,  ошибка)
	если ошибка # пусто {
		основа.добавить общую ошибку("ОКР-НЕТ-ТЕСТ-ВХОДА", импорт-тестового-входа, ошибка^)
		вернуть Исходники[]
	} 

    пусть ф = файлы.новый файл(нормализованный-путь)
    надо ф.это папка?() иначе вернуть Исходники[]

	пусть список = основа.подготовить исходники в папке(импорт-тестового-входа, нормализованный-путь)

	надо длина(список) > 0 & список[0].ошибка = пусто иначе	вернуть Исходники[]
    
	вернуть список
}
