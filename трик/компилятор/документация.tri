модуль компилятор

импорт "стд::вывод"
импорт "стд::строки"
импорт "стд::файлы"

импорт "трик/асд"
//импорт "трик/основа"

тип Док = класс {
	список = Строки[]
}

тип Байты = []Байт

фн построить документацию(мод: асд.Модуль) {

    вывод.ф("$;\n", мод.папка-модуля)

	пусть док = Док{}

	асд.задать обрабатываемый-модуль(мод)

	док.ф("модуль $;\n", мод.имя)


    цикл оп среди мод.описания {
        если оп.экспорт & оп типа асд.ОписаниеТипа {
			док.описание-типа(оп(:асд.ОписаниеТипа))
		}
	}

    цикл оп среди мод.описания {
        если оп.экспорт & оп типа асд.Функция {
			док.функция(оп(:асд.Функция), ложь)
		}
	}

	док.ф("")

	записать файл(мод.папка-модуля, мод.имя, ".def", док.список)

 	асд.задать обрабатываемый-модуль(пусто)
}

фн (док: Док) ф(формат: Строка, аргументы: ...*) {
	док.список.добавить(строки.ф(формат, аргументы...))
}

фн записать файл(папка: Строка, имя-файла: Строка, расширение: Строка, список: Строки) {

	пусть путь-файла = файлы.собрать путь(папка, строки.собрать( имя-файла, расширение))

    пусть ф = файлы.новый файл(путь-файла)
    
    ф.записать(строки.соединить("\n", список...)(:Байты))
    если ф.ошибка?() # пусто {
        авария(строки.ф("$;", ф.ошибка?()^. сообщение()))
    }
}

фн (док: Док) функция(тек: асд.Функция, методы: Лог) {

	пусть получатель := ""
	если тек.получатель # пусто {
		если ~методы {
			вернуть
		}
		получатель := строки.ф("($;: $;) ", тек.получатель^.имя, док.имя-типа(тек.получатель^.Т^))
	}

	пусть тф = тек.Т(:асд.ТипФункция)

	пусть тип-результата := ""
	если тф.Т-вернуть # пусто {
		тип-результата := строки.ф(": $;", док.имя-типа(тф.Т-вернуть^))
	}

	пусть параметры = Строки[]
	цикл пар среди тф.параметры {
        пусть разд := ": "
        если пар.выходной { разд := " := " }      
        параметры.добавить(строки.ф("$;$;$;", пар.имя, разд, док.имя-типа(пар.Т^)))
	}

	док.ф("фн $;$;($;)$;", получатель, тек.имя, строки.соединить(", ", параметры...), тип-результата)
}

//== типы

фн (док: Док) имя-типа(т: асд.Тип): Строка {
	вернуть асд.изображение-типа(т)
}

фн (док: Док) описание-типа(оп: асд.ОписаниеТипа) {
    выбор пусть тек: тип асд.основа(оп.Т^)^ {
	когда асд.ТипКласс:
		док.описание класса(оп, тек)
	другое
		док.ф("тип $; = $;", оп.имя, док.имя-типа(оп.Т^))
	}
}

фн (док: Док) описание класса(оп: асд.ОписаниеТипа, тк: асд.ТипКласс) {
	док.ф("тип $; = класс{}", оп.имя)

    цикл метод среди тк.методы {
		док.функция(метод, истина)
	}
	док.ф("")
}
