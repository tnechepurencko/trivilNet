модуль компилятор

импорт "стд::вывод"
импорт "стд::файлы"

импорт "трик/асд"
импорт "трик/основа"

фн (сб: Сборка) импортировать(имп: асд.Импорт) {

    пусть нормализованный-путь := ""
    пусть ошибка: мб Строка := пусто

    основа.нормализовать путь(имп.путь-импорта, нормализованный-путь,  ошибка)
	если ошибка # пусто {
		основа.добавить ошибку(имп.поз, "ОКР-ОШ-ПУТЬ-ИМПОРТА", имп.путь-импорта, ошибка^)
		вернуть
	}

    пусть эл = сб.импортированные.найти(нормализованный-путь)
	если эл # пусто {
		если эл^.значение = пусто {
			основа.добавить ошибку(имп.поз, "СЕМ-ЦИКЛ-ИМПОРТА", имп.путь-импорта)
			вернуть
		}

		// Модуль уже был импортирован
		имп.мод := эл^.значение^
		//вывод.ф("already импортed %s\n", i.Path)
		вернуть
	}
    
    пусть ф = файлы.новый файл(нормализованный-путь)
    если ~ ф.это папка?() {
		основа.добавить ошибку(имп.поз, "ОКР-ИМПОРТ-НЕ-ПАПКА", нормализованный-путь, "")
		вернуть
    }    
    
    пусть список = основа.подготовить исходники в папке(имп.путь-импорта, нормализованный-путь)
	если длина(список) = 0 {
		основа.добавить ошибку(имп.поз, "ОКР-ИМПОРТ-ПУСТАЯ-ПАПКА", имп.путь-импорта, нормализованный-путь)
		вернуть
	}

	если список[0].ошибка # пусто {
		основа.добавить ошибку(имп.поз, "ОКР-ОШ-ЧТЕНИЕ-ИСХОДНОГО", список[0].путь-файла, список[0].ошибка^.сообщение())
		вернуть
	}

    // тестирование
	если сб.путь-тестируемого = имп.путь-импорта {
		пусть тесты = подготовить исходники тестов(имп.путь-импорта, нормализованный-путь)

		надо основа.число ошибок() = 0 иначе вернуть

        список.добавить(тесты...)
	}

    сб.импортированные.добавить(нормализованный-путь, пусто) // начали разбор модуля
	имп.мод := сб.разобратьМодуль(ложь, список)
    сб.импортированные.добавить(нормализованный-путь, имп.мод) // закончили разбор модуля
}
