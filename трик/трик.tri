модуль трик

импорт "стд::вывод"
импорт "стд::комстрока"

импорт "трик/основа"
импорт "трик/лексер"
импорт "трик/компилятор"


вход {
    // параметры
    комстрока.разобрать()
    
    пусть путь = комстрока.аргумент(0)
    если путь = "" {
    	вывод.ф("Использование: трик параметры? (папка | файл.tri)")
        комстрока.показать настройки()
        комстрока.завершить программу(1)
    }

    вывод.ф("Тривиль-1 компилятор v0.0\n")
    основа.старт()
    
    если основа.только лексика() {
        показать лексику(путь)
    } иначе {
        компилятор.компилировать(путь)
    }

    основа.показать ошибки()
}

фн показать лексику(путь: Строка) {

    пусть список = основа.подготовить исходники по пути(путь)
    
    надо основа.число ошибок() = 0 иначе вернуть        
    
    пусть исх = список[0]
    надо исх.ошибка = пусто
    иначе {
        // TODO: общая ошибка должна быть уже выдана
        вывод.ф("%v\n", исх.ошибка^.сообщение())
        вернуть
    }
        
        
    //пусть и = основа.исходник из строки("модуль //стр\nпроверка/*ааа*/идент 123 @внеш 3.14 0xBAD \"привет\" 'ф'") // ", ; := . \n...\n (:"
    //основа.добавить ошибку(1, "ЛЕК-МОДИФИКАТОР")
    
    //вывод.ф("Сейчас как скомпилирую: '%v'\n", и.байты(:Строка))
    
    пусть ле = лексер.начать(исх)
    пока истина {
        ле.лексема()
        если ле.лек = лексер.КОН-ФАЙЛ {
            прервать
        }
   
        пусть П = основа.распаковать(ле.поз)
        вывод.ф("[%v:%v]  ", П.№-строки, П.№-символа)
   
        если ле.изо = "" {
            вывод.ф("%v: %v\n", ле.лек, лексер.в строку(ле.лек))
        } иначе {
            вывод.ф("%v:%v `%v`\n", ле.лек, лексер.в строку(ле.лек), ле.изо)
        }
	}    

}