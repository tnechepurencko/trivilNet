модуль асд

тип ТипОшибочный* = класс (Тип) {}

тип ТипВстроенный* = класс (Тип) {
    имя*: Строка = позже
}

тип УказТипа* = класс (Тип) {
    имя-типа*: Строка = позже
    имя-модуля*: Строка = позже
    оп-типа?*: мб ОписаниеТипа := пусто
    Т*: мб Тип := пусто
}

//=== вектор

тип ТипВектор* = класс (Тип) {
    Т-элемента*: Тип = позже
}

//=== класс

тип Поле* = класс (Описание) {
	умолчание*: мб Выражение = пусто
    задать-позже* := ложь
    одно-присваивание* := ложь
}

тип Поля* = []Поле
тип Методы* = []Функция

тип ТипКласс* = класс (Тип) {
    Т-базовый: мб Тип = пусто
	поля = Поля[]             // поля самого класса
	методы  = Методы[]  // методы самого класса
	//Members map[Строка]Decl // включая поля и методы базовых типов
}

//==== функция

тип Параметр* = класс (Описание) {}
тип Параметры = []Параметр

тип ТипФункция* = класс (Тип) {
	параметры =  Параметры[]
    Т-вернуть: мб Тип = пусто
}

/*
фн VariadicParam(ft *FuncType) *Param {
	если len(ft.Params) = 0 {
		вернуть nil
	}
	пусть last = ft.Params[len(ft.Params)-1]
	если IsVariadicType(last.Typ) {
		вернуть last
	}
	вернуть nil
}
*/

//== вариативный

тип ТипВариативный* = класс (Тип) {
    Т-элемента*: Тип = позже
}

//== мб тип

тип ТипМБ* = класс (Тип) {
    Т*: Тип = позже
}
