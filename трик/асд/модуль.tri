модуль асд

тип Номера = []Цел64

тип Импорт* = класс (Узел) {
    путь-импорта*: Строка = позже
    мод*: Модуль := нетМодуля
    номера-исходников* = Номера[] // список номеров исходных файлов, в которых есть импорт
}
тип Импорты* = []Импорт

тип Настройка* = класс (Узел) {
	путь-импорта*: Строка = позже
}

тип Вход* = класс (Узел) {
	тело*: СписокОператоров = позже
}

тип Модуль* = класс (Описание) {
    импорты* = Импорты[]
    описания* = Описания[]
    вход?*: мб Вход := пусто
    
    настройка*: мб Настройка := пусто 
/*
	Inner   *Scope
*/
}

фн  установить владельца*(мод: Модуль) {

	цикл оп среди мод.описания {
		оп.владелец := мод

        если оп типа ОписаниеТипа {
            пусть оп-типа = оп(:ОписаниеТипа)
            если оп-типа.Т # пусто & оп-типа.Т^ типа ТипКласс {
                пусть кл = оп-типа.Т^(:ТипКласс)
                цикл поле среди кл.поля {
                    поле.владелец := мод
                }
            }
        }
	}
}


фн новый Модуль*(поз: Цел64): Модуль {
    вернуть Модуль{
        поз: поз,
        Т: тип-не-задан
    }
}

пусть нетМодуля = новый Модуль(0)
// TODO: сделать функцию 