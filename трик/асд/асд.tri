модуль асд

тип Узел* = класс {
    поз*: Цел64 = позже // позиция в тексте
}

тип Тип* = класс (Узел) {}
тип Типы* = []Тип

тип Описание* = класс (Узел) {
    имя*: Строка := ""
    Т*: мб Тип := пусто
	владелец*: мб Модуль := пусто
    экспорт* := ложь
}
тип Описания* = []Описание

тип Выражение* = класс (Узел) {
    Т*: мб Тип := пусто
    только-чтение* := ложь
}
тип Выражения* = []Выражение

тип Оператор* = класс (Узел) {}
тип Операторы* = []Оператор

//==== модификаторы

тип Атрибут* = класс{
    имя*: Строка = позже
    значение*: Строка = позже
}
тип Атрибуты = []Атрибут

тип Модификатор* = класс {
	имя* := ""
	атрибуты* = Атрибуты[]
}

фн атрибут модификатора*(м: мб Модификатор, имя: Строка): Строка {
    надо м # пусто иначе вернуть ""

    цикл а среди м^.атрибуты {
        если а.имя = имя {
            вернуть а.значение
        }
    }
    вернуть ""
}

// =============

пусть тип-не-задан = Тип{поз: 0}