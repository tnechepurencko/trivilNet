модуль асд-показ

//импорт "стд::вывод"

импорт "стд::строки"
импорт "трик/асд"

фн с-выражение(выр: асд.Выражение): Строка {

	выбор пусть тек: тип выр {
    когда асд.Литерал:
        вернуть с-литерал(тек)   
	другое
        //авария("с-описание: неизвестный тип")
        вернуть строки.ф("(выражение)")
	}
//    вернуть строки.ф("(выражение)")
}

фн с-литерал(тек: асд.Литерал): Строка {

    пусть т = с-указ-типа(тек.Т)
    выбор тек.вид {
    когда асд.Лит-Цел: 
        вернуть строки.ф("(Лит-Цел \"$;\" $;)", тек.цел, т)
    когда асд.Лит-Слово: 
        вернуть строки.ф("(Лит-Слово \"$ш#;\" $;)", тек.слово, т)
    когда асд.Лит-Вещ: 
        вернуть строки.ф("(Лит-Вещ \"$;\" $;)", тек.вещ, т)
    когда асд.Лит-Символ: 
        вернуть строки.ф("(Лит-Символ \"$;\" $;)", тек.слово, т)
    когда асд.Лит-Строка: 
        вернуть строки.ф("(Лит-Строка \"$;\" $;)", "*исправить*", т)
    когда асд.Лит-Пусто: 
        вернуть строки.ф("(Лит-Пусто $;)", т)
    другое
        вернуть строки.ф("!неизвестный вид литерала $;", тек.вид)
    }

}

