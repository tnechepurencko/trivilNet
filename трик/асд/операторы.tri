модуль асд

тип СписокОператоров* = класс (Оператор) {
	операторы = Операторы[]
	//Inner      *Scope
}

тип ОператорВыражение* = класс (Оператор) {
	В*: Выражение = позже
}

тип ОператорОписание* = класс (Оператор) {
	оп*: Описание = позже
}

тип ОператорПрисвоить* = класс (Оператор) {
	Л*: Выражение = позже
	П*: Выражение = позже
}

тип ОператорУвеличить* = класс (Оператор) {
	Л*: Выражение = позже
}

тип ОператорУменьшить* = класс (Оператор) {
	Л*: Выражение = позже
}

//==

тип ОператорЕсли* = класс (Оператор) {
	условие*: Выражение = позже
	если-да: СписокОператоров = позже
	если-нет: мб Оператор = пусто
}

тип ОператорПока* = класс (Оператор) {
	условие*: Выражение = позже
	список*: СписокОператоров = позже
}

тип ОператорНадо* = класс (Оператор) {
	условие*: Выражение = позже
	если-нет: Оператор = позже
}

//==== выбор

тип Вариант* = класс (Оператор) {
	выражения = Выражения[]
	список*: СписокОператоров = позже
}
тип Варианты* = []Вариант

тип ОператорВыбор* = класс (Оператор) {
	В: мб Выражение = пусто // = пусто, если предикатный выбор
	варианты* = Варианты[]
    если-нет*: СписокОператоров = позже
}

//==== выбор по типу

тип ВариантТипа* = класс (Оператор) {
	типы* = Типы[]
	переменная: мб ОписаниеПеременной = пусто // пусто, если переменная не задана
	список*: СписокОператоров = позже
}
тип ВариантыТипа* = []ВариантТипа

тип ОператорВыборТипа* = класс (Оператор) {
	имя-переменной* := ""
	В*: Выражение = позже
	варианты* = ВариантыТипа[]
    если-нет*: СписокОператоров = позже
}


//=== остальные

тип ОператорАвария* = класс (Оператор) {
	В*: Выражение = позже
}

тип ОператорВернуть* = класс (Оператор) {
	В*: Выражение = позже
}

тип ОператорПрервать* = класс (Оператор) {
}
