// Подготовка тестов трик компилятора
модуль тесты

импорт "стд::вывод"
импорт "стд::строки"
импорт "стд::файлы"

конст расширение-исходного = ".tri"

тип Строки = []Строка

тип Тест* = класс {
    имя-файла*: Строка = позже
    отброшен* := "" // причина по которой тест отброшен
    на-ошибку-исполнения* := ложь 
    вывод* = Строки[]
}
тип Тесты = []Тест

фн подготовить тесты*(путь-папки: Строка): Тесты {
    пусть тесты = Тесты[]

    пусть папка = файлы.новый файл(путь-папки)
    
    пусть имена = папка.имена в папке()
    надо папка.ошибка?() = пусто
    иначе {
        авария(строки.ф("Тесты: ошибочный путь папки: $;: $;", путь-папки, папка.ошибка?()^.сообщение()))
        вернуть тесты
    }
    
    цикл имя-файла среди имена {
        если строки.есть суффикс(имя-файла, расширение-исходного) {
            пусть т = Тест{имя-файла: имя-файла}
            извлечь результат(путь-папки, т)
            тесты.добавить(т)
        }
    }

    вернуть тесты
}

фн извлечь результат(путь-папки: Строка, т: Тест) {
    пусть путь = файлы.собрать путь(путь-папки, т.имя-файла)
    пусть файл = файлы.новый файл(путь)
    пусть байты = файл.прочитать()
    надо файл.ошибка?() = пусто
    иначе {
        т.отброшен := строки.ф("Ошибка чтения $;: $;", путь, файл.ошибка?()^.сообщение())
        вернуть 
    }    
    пусть текст = строки.разобрать(байты(:Строка), "\n")
    надо длина(текст) > 0 
    иначе {
        т.отброшен := строки.ф("Пустой файл $;", путь)
        вернуть 
    }
   пусть команда = текст[0]

    выбор {
    когда строки.есть префикс(команда, "/*вывод("):
        пусть № := 1
        пока № < длина(текст) & ~ строки.есть префикс(текст[№], ")") {
            т.вывод.добавить(текст[№])
            №++
        }
        надо № < длина(текст) 
        иначе {
            т.отброшен := строки.ф("Нет завершающей ')' в команде 'вывод'")
            вернуть 
        }
    другое
        т.отброшен := строки.ф("Неизвестная команда в первой строки файла $;: $;", путь, команда)
        вернуть 
    }
}

/*
вход {
    пусть тт = тесты.подготовить тесты("трик/тесты/_тесты_")
    
    цикл т среди тт {
        вывод.ф("тест $;", т.имя-файла)
        если т.отброшен # "" {
            вывод.ф(" отброшен: $;\n", т.отброшен)
        } иначе если т. на-ошибку-исполнения { 
            вывод.ф(" на ошибку исполнения\n")
        } иначе {
            вывод.ф(" вывод\n")
            цикл с среди т.вывод {
                вывод.ф("$;\n", с)
            }
        }
    }
}
*/